@startuml "Abstract Classes"

interface "Drawable" as d {
  +void drawSelf(Draw draw)
  +void move(double xShift, double yShift)
}

abstract class "DrawableCircle" as dC {
  -double radius
  -double x
  -double y
  -Color fillColor
  -Drawable[] bodyparts

  +DrawableCircle(double x, double y, double radius, Color fillColor)
  
  +double getX()
  +double getY()
  +double getRadius()

  +void addChild(Drawable newPart)
  -void drawChildren(Draw draw)
  -void moveChildren(double xShift, double yShift)
}

class "Eye" as dCE {
  +Eye(double x, double y, double radius)
}

class "Head" as dCH {
  -Eye lEye
  -Eye rEye

  +Head(double x, double y, double radius)

  +Eye getEye(int index)
  +double getForeHeadY()
}

abstract class "DrawableRectangle" as dR {
  -double x
  -double y
  -double l
  -double w
  -double rotation
  -Color fillColor
  -Drawable[] bodyparts

  +DrawableRectangle(double x, double y, double l, double w, double rotation, Color fillColor)
  
  +double[] getXCoords()
  +double[] getYCoords()
  +double getX()
  +double getY()
  +double getXEnd()
  +double getYEnd()
  +double getRotation()
  +double getW()
  +double getL()
  +void setX(double x)
  +void setY(double y)

  +void rotate(double angle)

  +void addChild(Drawable newPart)
  -void drawChildren(Draw draw)
  -void moveChildren(double xShift, double yShift)
}

class "Torso" as dRT {
  +Torso(double x, double y, double h, double w)
  +Torso(double x, double y, double radius)
}

class "LimbSegment" as LimbSegment {
  -LimbSegment nextSegment
  -boolean isLeftLimb
  -boolean hasNextSegment

  -LimbSegment(double x, double y, double h, double w, boolean isExtremity, boolean isLeftLimb)
  +LimbSegment(double x, double y, double radius, boolean isLeftLimb)
  
  -void addSegment(LimbSegment segment)
  -void addForeLimb()
  -void addExtremity()

  +void rotate(double angle)
  +double getExtremityXEnd()
  +double getExtremityYEnd()
}

d <|.. dC
dC <|-- dCE
dC <|-- dCH
dCH "1" *-- "2" dCE : has
d <|.. dR
dR <|-- dRT
dR <|-- LimbSegment
LimbSegment "1" *-- "(0,1)" LimbSegment : has
dC "1" *-- "many" d : contains
dR "1" *-- "many" d : contains
@enduml